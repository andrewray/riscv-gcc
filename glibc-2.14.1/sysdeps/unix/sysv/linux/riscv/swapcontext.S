/* Save and set current context.
   Copyright (C) 2009 Free Software Foundation, Inc.
   This file is part of the GNU C Library.
   Contributed by Maciej W. Rozycki <macro@codesourcery.com>.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, write to the Free
   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
   02110-1301, USA.  */

#include <sysdep.h>
#include <sys/asm.h>

#include "ucontext_i.h"

/* int swapcontext (ucontext_t *oucp, const ucontext_t *ucp) */

LEAF (__swapcontext)
	/* Store a magic flag.	*/
	li	v1, 1
	REG_S	v1, ( 0 * SZREG + MCONTEXT_GREGS)(a0)	/* zero */

	REG_S	ra, MCONTEXT_PC(a0)
	REG_S	ra, ( 1 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s0, ( 2 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s1, ( 3 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s2, ( 4 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s3, ( 5 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s4, ( 6 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s5, ( 7 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s6, ( 8 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s7, ( 9 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s8, (10 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s9, (11 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s10,(12 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	s11,(13 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	sp, (14 * SZREG + MCONTEXT_GREGS)(a0)
	REG_S	tp, (15 * SZREG + MCONTEXT_GREGS)(a0)

#ifdef __riscv_hard_float
  mffsr v1

	fsd	fs0, ( 0 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs1, ( 1 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs2, ( 2 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs3, ( 3 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs4, ( 4 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs5, ( 5 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs6, ( 6 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs7, ( 7 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs8, ( 8 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs9, ( 9 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs10,(10 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs11,(11 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs12,(12 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs13,(13 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs14,(14 * 8 + MCONTEXT_FPREGS)(a0)
	fsd	fs15,(15 * 8 + MCONTEXT_FPREGS)(a0)

	sw	v1, MCONTEXT_FSR(a0)
#endif /* __mips_hard_float */

	addi    sp, sp, -SZREG
	REG_S	a1, 0(sp)

/* rt_sigprocmask (SIG_SETMASK, &ucp->uc_sigmask, NULL, _NSIG8) */
	li	a3, _NSIG8
	add	a2, a0, UCONTEXT_SIGMASK
	add     a1, a1, UCONTEXT_SIGMASK
	li	a0, SIG_SETMASK

	li	v0, SYS_ify (rt_sigprocmask)
	syscall

	REG_L   v0, 0(sp)
	addi    sp, sp, SZREG
	bnez	a3, 99f

#ifdef __riscv_hard_float
	lw	v1, MCONTEXT_FSR(v0)

	fld	fs0, ( 0 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs1, ( 1 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs2, ( 2 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs3, ( 3 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs4, ( 4 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs5, ( 5 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs6, ( 6 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs7, ( 7 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs8, ( 8 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs9, ( 9 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs10,(10 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs11,(11 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs12,(12 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs13,(13 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs14,(14 * 8 + MCONTEXT_FPREGS)(v0)
	fld	fs15,(15 * 8 + MCONTEXT_FPREGS)(v0)

	mtfsr	v1
#endif /* __mips_hard_float */

	/* Note the contents of argument registers will be random
	   unless makecontext() has been called.  */
	REG_L	ra, ( 1 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s0, ( 2 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s1, ( 3 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s2, ( 4 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s3, ( 5 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s4, ( 6 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s5, ( 7 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s6, ( 8 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s7, ( 9 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s8, (10 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s9, (11 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s10,(12 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	s11,(13 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	sp, (14 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	tp, (15 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a0, (18 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a1, (19 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a2, (20 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a3, (21 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a4, (22 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a5, (23 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a6, (24 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a7, (25 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a8, (26 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a9, (27 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a10,(28 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a11,(29 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a12,(30 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	a13,(31 * SZREG + MCONTEXT_GREGS)(v0)
	REG_L	v1, MCONTEXT_PC(v0)
	addi    sp, sp, SZREG

	move	v0, zero
	jr	v1

99:	PIC_J(__syscall_error)

PSEUDO_END (__swapcontext)

weak_alias (__swapcontext, swapcontext)
