/* MIPS extra machine modes. 
   Copyright (C) 2003, 2004, 2007, 2008 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING3.  If not see
<http://www.gnu.org/licenses/>.  */

/* MIPS has a quirky almost-IEEE format for all its
   floating point.  */
RESET_FLOAT_FORMAT (SF, mips_single_format);
RESET_FLOAT_FORMAT (DF, mips_double_format);

/* Irix6 will override this via MIPS_TFMODE_FORMAT.  */
FLOAT_MODE (TF, 16, mips_quad_format);

/* Vector modes.  */
VECTOR_MODES (INT, 8);        /*       V8QI V4HI V2SI */
VECTOR_MODES (FLOAT, 8);      /*            V4HF V2SF */
VECTOR_MODES (INT, 4);        /*            V4QI V2HI */

VECTOR_MODES (FRACT, 4);	/* V4QQ  V2HQ */
VECTOR_MODES (UFRACT, 4);	/* V4UQQ V2UHQ */
VECTOR_MODES (ACCUM, 4);	/*       V2HA */
VECTOR_MODES (UACCUM, 4);	/*       V2UHA */

/* Paired single comparison instructions use 2 or 4 CC.  */
CC_MODE (CCV2);
ADJUST_BYTESIZE (CCV2, 8);
ADJUST_ALIGNMENT (CCV2, 8);

CC_MODE (CCV4);
ADJUST_BYTESIZE (CCV4, 16);
ADJUST_ALIGNMENT (CCV4, 16);

/* Eventually we want to include syscfg.h here so that we can use the
   common definition of RISCV_SYSCFG_VLEN_MAX, but for now it is not
   clear how to do this. syscfg.h in in libgloss which is not used when
   building the actual cross-compiler. We kind of want to use the
   "version" in sims - the one for native programs instead of riscv
   programs. Even if we could include syscfg.h though, we would still
   need to figure out a way to include it in the mips-riscv.md since the
   machine description file also refers to these modes. */

#define RISCV_SYSCFG_VLEN_MAX 32

/*----------------------------------------------------------------------*/
/* RISCV_VECTOR_MODE_NAME                                               */
/*----------------------------------------------------------------------*/
/* This is a helper macro which creates a riscv vector mode name from
   the given inner_mode. It does this by concatenating a 'V' prefix, the
   maximum riscv vector length, and the inner mode together. For
   example, RISCV_VECTOR_MODE_NAME(SI) should expand to V32SI if the
   riscv maximum vector length is 32. We need to use the nested macros
   to make sure RISCV_SYSCFG_VLEN_MAX is expanded _before_
   concatenation. */

#define RISCV_VECTOR_MODE_NAME_H2( res_ ) res_

#define RISCV_VECTOR_MODE_NAME_H1( arg0_, arg1_, arg2_ ) \
  RISCV_VECTOR_MODE_NAME_H2( arg0_ ## arg1_ ## arg2_ )

#define RISCV_VECTOR_MODE_NAME_H0( arg0_, arg1_, arg2_ ) \
  RISCV_VECTOR_MODE_NAME_H1( arg0_, arg1_, arg2_ )

#define RISCV_VECTOR_MODE_NAME( inner_mode_ ) \
  RISCV_VECTOR_MODE_NAME_H0( V, RISCV_SYSCFG_VLEN_MAX, inner_mode_ )

/*----------------------------------------------------------------------*/
/* RISC-V Vector Modes                                                   */
/*----------------------------------------------------------------------*/

VECTOR_MODE( INT,   DI, RISCV_SYSCFG_VLEN_MAX );
VECTOR_MODE( INT,   SI, RISCV_SYSCFG_VLEN_MAX );
VECTOR_MODE( INT,   HI, RISCV_SYSCFG_VLEN_MAX );
VECTOR_MODE( INT,   QI, RISCV_SYSCFG_VLEN_MAX );
VECTOR_MODE( FLOAT, DF, RISCV_SYSCFG_VLEN_MAX );
VECTOR_MODE( FLOAT, SF, RISCV_SYSCFG_VLEN_MAX );

/* By default, vector types are forced to be aligned to the full vector
   size but in riscv we just need them to be aligned to the element
   size. */

ADJUST_ALIGNMENT( RISCV_VECTOR_MODE_NAME(DI), 8 );
ADJUST_ALIGNMENT( RISCV_VECTOR_MODE_NAME(SI), 4 );
ADJUST_ALIGNMENT( RISCV_VECTOR_MODE_NAME(HI), 2 );
ADJUST_ALIGNMENT( RISCV_VECTOR_MODE_NAME(QI), 1 );
ADJUST_ALIGNMENT( RISCV_VECTOR_MODE_NAME(DF), 8 );
ADJUST_ALIGNMENT( RISCV_VECTOR_MODE_NAME(SF), 4 );

