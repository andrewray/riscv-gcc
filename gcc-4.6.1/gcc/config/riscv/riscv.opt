; Options for the MIPS port of the compiler
;
; Copyright (C) 2005, 2007, 2008, 2010, 2011 Free Software Foundation, Inc.
;
; This file is part of GCC.
;
; GCC is free software; you can redistribute it and/or modify it under
; the terms of the GNU General Public License as published by the Free
; Software Foundation; either version 3, or (at your option) any later
; version.
;
; GCC is distributed in the hope that it will be useful, but WITHOUT
; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
; License for more details.
;
; You should have received a copy of the GNU General Public License
; along with GCC; see the file COPYING3.  If not see
; <http://www.gnu.org/licenses/>.

EB
Driver

EL
Driver

mabi=
Target RejectNegative Joined
-mabi=ABI	Generate code that conforms to the given ABI

mabicalls
Target Report Mask(ABICALLS)
Generate code that can be used in SVR4-style dynamic objects

mbranch-cost=
Target RejectNegative Joined UInteger Var(mips_branch_cost)
-mbranch-cost=COST	Set the cost of branches to roughly COST instructions

meb
Target Report RejectNegative Mask(BIG_ENDIAN)
Use big-endian byte order

mel
Target Report RejectNegative InverseMask(BIG_ENDIAN, LITTLE_ENDIAN)
Use little-endian byte order

mhard-float
Target Report RejectNegative InverseMask(SOFT_FLOAT_ABI, HARD_FLOAT_ABI)
Allow the use of hardware floating-point ABI and instructions

mips
Target RejectNegative Joined
-mipsN	Generate code for ISA level N

mlong-calls
Target Report Var(TARGET_LONG_CALLS)
Use indirect calls

mmemcpy
Target Report Mask(MEMCPY)
Don't optimize block moves

msoft-float
Target Report RejectNegative Mask(SOFT_FLOAT_ABI)
Prevent the use of all hardware floating-point instructions

mtune=
Target RejectNegative Joined Var(mips_tune_string)
-mtune=PROCESSOR	Optimize the output for PROCESSOR
